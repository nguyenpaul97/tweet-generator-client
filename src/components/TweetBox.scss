@import '~compass-mixins/lib/compass/css3';
@import url('https://fonts.googleapis.com/css?family=Inconsolata');
@mixin transition-all {
  -webkit-transition: all 200ms ease-in-out;
  -moz-transition: all 200ms ease-in-out;
  -o-transition: all 200ms ease-in-out;
  transition: all 200ms ease-in-out;
}

$slate-color: rgb(16, 24, 50);
$blue-color: #00bcdd;
$pink-color: #ff00ff;

h1 {
  text-align: center;
  font-family: 'Oswald', sans-serif;
  font-style: italic;
}

strong {
  color: black;
}

img {
  border-radius: 10px;
}

ul {
  display: flex;
  flex-direction: row;
  list-style-type: none;
}

.body {
  text-align: center;
}

.tweetBox {
  padding: 1.25rem 1.25rem 0.725rem 1.25rem;
  border: 1px solid #e1e8ed;
  margin: 3em auto;
  max-width: 520px;
  color: #697882;
  background-color: white;
}

.username {
  float: left;
  text-align: left;
  position: relative;
  padding-left: 1%;
}

.uwu {
  float: right;
  padding-right: 3%;
}

.ml-10 {
  margin-left: 10px;
}
.mt-10 {
  align-items: center;
  align-self: center;
}

.follow {
  display: inline-flex;
}

.followButton {
  display: flex;
  align-items: center;
  text-align: center;
  color: #55acee;
  background-color: transparent;
  border: 1px solid #55acee;
  border-radius: 4px;
  font-weight: 700;
  width: 100px;
  height: 30px;
}

.followButton .wordfollow {
  display: flex;
  margin: 10px;
}

.followButton:hover {
  background-color: #55acee;
  color: white;
}

.big-btn {
  color: $slate-color;
  cursor: pointer;
  display: inline-block;
  letter-spacing: 0.075em;
  padding: 0.8em 1em;
  margin: auto 2em;
  position: relative;
  align-self: center;
  text-transform: uppercase;
  border: 3px $blue-color solid;
  border-image: linear-gradient(45deg, $blue-color 0%, $pink-color 100%);
  border-image-slice: 1 1 0 0;
  z-index: 1;
  box-shadow: -0.5em 0.5em transparentize($slate-color, 1);
  transform-origin: left bottom;
  @include transition-all;

  &:before,
  &:after {
    border: 3px $blue-color solid;
    content: '';
    display: block;
    position: absolute;
    z-index: -1;
  }

  // SIDE
  &:before {
    border-image: linear-gradient(
      45deg,
      $blue-color 0%,
      adjust-hue($blue-color, 10%) 100%
    );
    border-image-slice: 1 1 0 1;
    left: -0.59em;
    top: 0.15em;
    width: 0.31em;
    height: 100%;
    transform: skewY(-45deg);
  }

  // BOTTOM
  &:after {
    border-image: linear-gradient(45deg, $blue-color 0%, $pink-color 100%);
    border-image-slice: 1 1 1 0;
    bottom: -0.61em;
    right: 0.16em;
    width: 100%;
    height: 0.31em;
    transform: skewX(-45deg);
  }

  // Shadow
  &:active {
    //border-image-slice: 1;
    background-color: white;
    background-size: 90%;
    transform: translate(-0.5em, 0.5em);
    //box-shadow: -1em 1em .15em transparentize($slate-color,.9);
    // box-shadow: -1em 1em 1em transparentize($blue-color,.9), -1em 1.9em 1.9em transparentize($slate-color,.9), 0em .38em .38em transparentize($slate-color,.9), 0em .76em .76em transparentize($slate-color,.9), 0em 1.52em 1.52em transparentize($slate-color,.9);

    &:before {
      @include background-image(
        linear-gradient(
          45deg,
          $blue-color 0%,
          adjust-hue($blue-color, 10%) 100%
        )
      );
      height: calc(100% - 0.13em);
      border-image-slice: 1;
    }

    &:after {
      @include background-image(
        linear-gradient(45deg, $blue-color 0%, $pink-color 100%)
      );
      width: calc(100% - 0.13em);
      border-image-slice: 1;
    }
  }
}

.cta {
  background-color: $blue-color; // Old browsers
  @include background-image(
    linear-gradient(45deg, $blue-color 0%, $pink-color 100%)
  );
  border-image: linear-gradient(
    45deg,
    lighten($blue-color, 20%) 0%,
    lighten($pink-color, 20%) 100%
  );
  border-image-slice: 1;
  color: white;

  &:before {
    border-image-slice: 1;
    @include background-image(
      linear-gradient(45deg, $blue-color 0%, adjust-hue($blue-color, 10%) 100%)
    );
    left: -0.75em;
    top: 0.15em;
  }

  &:after {
    border-image-slice: 1;
    @include background-image(
      linear-gradient(45deg, $blue-color 0%, $pink-color 100%)
    );
    bottom: -0.75em;
    right: 0.15em;
  }

  &:hover {
    background: white;
    border-image: linear-gradient(45deg, $blue-color 0%, $pink-color 100%);
    border-image-slice: 1;
    color: $slate-color;

    &:before {
      height: 100%;
    }
    &:after {
      width: 100%;
    }
  }
}

.bg {
  background: none;
  border: 3px solid $slate-color;
  color: $slate-color;

  &:before,
  &:after {
    background: $slate-color;
    border: 3px solid $slate-color;
  }

  &:hover {
    border-image: none;

    &:before,
    &:after {
      background: $slate-color;
    }
  }
}

#tweet {
  text-align: left;
  animation: fadeInAnimation 5s;
  padding-top: 10%;
  color: black;
}

@keyframes fadeInAnimation {
  0% {
    /* opacity: 0; */
    color: white;
  }

  100% {
    /* opacity: 1; */
    color: black;
  }
}

#time {
  text-align: left;
  font-size: 0.875rem;
  color: #697882;
}

#anonPicture {
  margin-top: 8px;
}

.glitch {
  color: rgb(0, 0, 0);
  position: relative;
  font-size: 9vw;
  animation: glitch 5s 5s infinite;
}

.glitch::before {
  content: attr(data-text);
  position: absolute;
  left: -2px;
  text-shadow: -5px 0 magenta;
  background: black;
  overflow: hidden;
  top: 0;
  animation: noise-1 3s linear infinite alternate-reverse,
    glitch 5s 5.05s infinite;
}

.glitch::after {
  content: attr(data-text);
  position: absolute;
  left: 2px;
  text-shadow: -5px 0 lightgreen;
  background: black;
  overflow: hidden;
  top: 0;
  animation: noise-2 3s linear infinite alternate-reverse, glitch 5s 5s infinite;
}

@keyframes glitch {
  1% {
    transform: rotateX(10deg) skewX(90deg);
  }
  2% {
    transform: rotateX(0deg) skewX(0deg);
  }
}

@keyframes noise-1 {
  $steps: 30;
  @for $i from 1 through $steps {
    #{percentage($i*(1/$steps))} {
      $top: random(100);
      $bottom: random(101 - $top);
      clip-path: inset(#{$top}px 0 #{$bottom}px 0);
    }
  }
}

@keyframes noise-2 {
  $steps: 30;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      $top: random(100);
      $bottom: random(101 - $top);
      clip-path: inset(#{$top}px 0 #{$bottom}px 0);
    }
  }
}

.scanlines {
  overflow: hidden;
  mix-blend-mode: difference;
}

.scanlines::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;

  background: repeating-linear-gradient(
    to bottom,
    transparent 0%,
    rgba(255, 255, 255, 0.05) 0.5%,
    transparent 1%
  );

  animation: fudge 7s ease-in-out alternate infinite;
}

@keyframes fudge {
  from {
    transform: translate(0px, 0px);
  }
  to {
    transform: translate(0px, 2%);
  }
}

.glow {
  @extend .glitch;
  text-shadow: 0 0 1000px rgb(223, 191, 191);
  color: transparent;
  position: absolute;
  top: 0;
}

.subtitle {
  font-family: Arial, Helvetica, sans-serif;
  font-weight: 100;
  font-size: 0.8vw;
  color: rgba(165, 141, 141, 0.4);
  text-transform: uppercase;
  letter-spacing: 1em;
  text-align: center;
  position: absolute;
  left: 17%;
  animation: glitch-2 5s 5.02s infinite;
}

@keyframes glitch-2 {
  1% {
    transform: rotateX(10deg) skewX(70deg);
  }
  2% {
    transform: rotateX(0deg) skewX(0deg);
  }
}
